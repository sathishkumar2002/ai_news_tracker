name: Run ETL every 6 hours

on:
  schedule:
    - cron: '0 */6 * * *'  # Every 6 hours
  workflow_dispatch:       # Allows manual trigger

jobs:
  run-etl:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Ensure data directory and CSV file exist
      run: |
        mkdir -p data
        touch data/news_data.csv
        if [ ! -s data/news_data.csv ]; then
          echo "title,description,url,publishedAt,source,image" > data/news_data.csv
        fi
      shell: bash

    - name: Run ETL script
      env:
        GNEWS_API_KEY: ${{ secrets.GNEWS_API_KEY }}
      run: python etl.py

    - name: Debug - Check token length
      env:
        GITHUB_TOKEN: ${{ secrets.PUSH_PAT }}
      run: |
        echo "Token length: ${#GITHUB_TOKEN}"
      shell: bash

    - name: Debug - Show first 4 chars of token
      env:
        GITHUB_TOKEN: ${{ secrets.PUSH_PAT }}
      run: |
        echo "Token starts with: ${GITHUB_TOKEN::4}"
      shell: bash

    - name: Debug - Show Git Diff
      run: |
        git status
        git diff
        git diff --cached || true
      shell: bash


    - name: üîç Debug - Show Git remote and token type
      run: |
        git remote -v
        git config --get user.name
        git config --get user.email
        echo "Remote URL is: $(git remote get-url origin)"
        echo "First few characters of token (for debugging): ${GITHUB_TOKEN:0:5}"
      env:
        GITHUB_TOKEN: ${{ secrets.PUSH_PAT }}
      shell: bash


    - name: Commit and push updated CSV
      env:
        GITHUB_TOKEN: ${{ secrets.PUSH_PAT }}
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "actions@github.com"

        echo "üîê Setting remote URL with PAT"
        git remote set-url origin https://${PUSH_PAT}@github.com/${{ github.repository }}
        git remote -v

        git add data/news_data.csv
        if git diff --cached --quiet; then
        echo "No changes to commit"
        else
        git commit -m "üîÑ Auto update news data"
        git push origin HEAD:main
        fi
      shell: bash
